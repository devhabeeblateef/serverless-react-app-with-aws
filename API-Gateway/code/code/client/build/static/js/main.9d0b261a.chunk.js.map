{"version":3,"sources":["DCTLogoSilver3D.png","serviceWorker.ts","components/NotFound.tsx","config.ts","api/items-api.ts","components/Items.tsx","App.tsx","routing.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","NotFound","_React$PureComponent","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","React","apiEndpoint","concat","getItems","_getItems","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","console","log","Axios","get","headers","Content-Type","sent","data","abrupt","Items","stop","createItem","_x","_createItem","_callee2","newItem","_context2","put","JSON","stringify","Access-Control-Allow-Origin","item","deleteItem","_x4","_deleteItem","_callee4","itemId","_context4","delete","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","state","items","newItemItemId","newItemName","newItemPrice","loadingItems","handleItemIdChange","event","setState","target","handleNameChange","handlePriceChange","onItemCreate","name","price","t0","alert","onItemDelete","_ref2","_componentDidMount","_callee3","_context3","message","Header","as","renderCreateItemInput","renderItems","Grid","Row","Column","width","Input","fluid","actionPosition","placeholder","onChange","Button","color","content","icon","onClick","Divider","renderLoading","renderItemsList","Loader","indeterminate","active","inline","_this2","padded","verticalAlign","floated","map","pos","Icon","App","_Component","props","createElement","Container","Segment","style","padding","vertical","container","stackable","Image","src","logo","alt","size","centered","Router","history","generateMenu","generateCurrentPage","Menu","Item","Link","to","Switch","Route","path","exact","render","component","Component","createHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d0b261a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DCTLogoSilver3D.91384bea.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react'\n\ninterface NotFoundProps {\n}\n\ninterface NotFoundState {\n}\n\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\n  render() {\n    return <h1>Nothing on Dashboard. Please click Items link above.</h1>\n  }\n}\n","const apiId = 't0j94v6m80'\nexport const apiEndpoint = `https://${apiId}.execute-api.us-east-1.amazonaws.com/prod`\n","import { apiEndpoint } from '../config'\nimport { Item } from '../types/Item';\nimport { CreateItemRequest } from '../types/CreateItemRequest';\nimport Axios from 'axios'\nimport { UpdateItemRequest } from '../types/UpdateItemRequest';\n\nexport async function getItems(): Promise<Item[]> {\n  console.log('Fetching items')\n\n  const response = await Axios.get(`${apiEndpoint}/items`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  })\n  console.log('Items:', response.data)\n  return response.data.Items\n}\n\nexport async function createItem(\n  newItem: CreateItemRequest\n): Promise<Item> {\n  const response = await Axios.put(`${apiEndpoint}/items`,  JSON.stringify(newItem), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  })\n  return response.data.item\n}\n\nexport async function patchItem(\n  itemId: string,\n  updatedItem: UpdateItemRequest\n): Promise<void> {\n  await Axios.patch(`${apiEndpoint}/items/${itemId}`, JSON.stringify(updatedItem), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  })\n}\n\nexport async function deleteItem(\n  itemId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/items/${itemId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  })\n}\n","import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createItem, deleteItem, getItems, patchItem } from '../api/items-api'\nimport { Item } from '../types/Item'\n\ninterface ItemsProps {\n  history: History\n}\n\ninterface ItemsState {\n  items: Item[]\n  newItemItemId: string\n  newItemName: string\n  newItemPrice: string\n  loadingItems: boolean\n}\n\nexport class Items extends React.PureComponent<ItemsProps, ItemsState> {\n  state: ItemsState = {\n    items: [],\n    newItemItemId: '',\n    newItemName: '',\n    newItemPrice: '',\n    loadingItems: true\n  }\n\n  handleItemIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newItemItemId: event.target.value })\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newItemName: event.target.value })\n  }\n\n  handlePriceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newItemPrice: event.target.value })\n  }\n\n  onItemCreate = async () => {\n    try {\n      const newItem = await createItem( {\n        itemId: this.state.newItemItemId,\n        name: this.state.newItemName,\n        price: this.state.newItemPrice\n      })\n      const items = await getItems()\n      this.setState({\n        items,\n        loadingItems: false\n      })\n    } catch {\n      alert('Item creation failed')\n    }\n  }\n\n  onItemDelete = async (itemId: string) => {\n    try {\n      await deleteItem(itemId)\n      const items = await getItems()\n      this.setState({\n        items,\n        loadingItems: false\n      })\n    } catch {\n      alert('Item deletion failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const items = await getItems()\n      this.setState({\n        items,\n        loadingItems: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch items: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n          <Header as=\"h1\">ITEMs</Header>\n\n          {this.renderCreateItemInput()}\n\n          {this.renderItems()}\n      </div>\n    )\n  }\n\n  renderCreateItemInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={8}>\n\n          <Input\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"Item Id...\"\n            onChange={this.handleItemIdChange}\n          />\n\n          <Input\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"Item name...\"\n            onChange={this.handleNameChange}\n          />\n\n          <Input\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"Item price - like $10.00 ...\"\n            onChange={this.handlePriceChange}\n          />\n\n          <Button\n            color=\"teal\"\n            content=\"Add New Item\"\n            icon=\"add\"\n            onClick={this.onItemCreate}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderItems() {\n    if (this.state.loadingItems) {\n      return this.renderLoading()\n    }\n\n    return this.renderItemsList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading ITEMs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderItemsList() {\n    return (\n      <Grid padded>\n        <Grid.Row key={0}>\n          <Grid.Column width={3} verticalAlign=\"middle\">\n            Item Id\n          </Grid.Column>\n          <Grid.Column width={5} verticalAlign=\"middle\">\n            Name\n          </Grid.Column>\n          <Grid.Column width={4} floated=\"right\">\n            Price\n          </Grid.Column>\n          <Grid.Column width={1} floated=\"right\">\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <Divider />\n          </Grid.Column>\n        </Grid.Row>\n        {this.state.items.map((item, pos) => {\n          return (\n            <Grid.Row key={item.itemId}>\n              <Grid.Column width={3} verticalAlign=\"middle\">\n                {item.itemId}\n              </Grid.Column>\n              <Grid.Column width={5} verticalAlign=\"middle\">\n                {item.name}\n              </Grid.Column>\n              <Grid.Column width={4} floated=\"right\">\n                {item.price}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onItemDelete(item.itemId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n}\n","import React, { Component } from 'react'\nimport { Link, Route, Router, Switch } from 'react-router-dom'\nimport { Container, Grid, Menu, Segment, Image } from 'semantic-ui-react'\n\nimport { NotFound } from './components/NotFound'\nimport { Items } from './components/Items'\n\nimport logo from './DCTLogoSilver3D.png';\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <Container>\n        {/* Heads up! We apply there some custom styling, you usually will not need it. */}\n        <style>\n          {`\n          html, body {\n            background-color: #003163 !important;\n            color: #fff !important;\n          }\n          h1.ui.header {\n            color: #fff !important;\n          }\n          p > span {\n            opacity: 0.4;\n            text-align: center;\n          }\n        }\n        `}\n        </style>\n        <Segment style={{ padding: '2em 0em' }} vertical>\n          <Grid container stackable verticalAlign=\"middle\">\n            <Grid.Row>\n              <Image src={logo} alt='Logo' size='medium' verticalAlign='middle' centered />\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={16}>\n                <Router history={this.props.history}>\n                  {this.generateMenu()}\n\n                  {this.generateCurrentPage()}\n                </Router>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </Container>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item name=\"items\">\n          <Link to=\"/\">Items</Link>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n\n  generateCurrentPage() {\n\n    return (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => {\n            return <Items {...props} />\n          }}\n        />\n\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React from 'react'\nimport { Router, Route } from 'react-router-dom'\nimport createHistory from 'history/createBrowserHistory'\nimport App from './App';\nconst history = createHistory()\n\n\nexport const makeRouting = () => {\n  return (\n    <Router history={history}>\n      <div>\n        <Route\n          render={props => {\n            return <App {...props} />\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeRouting } from './routing';\n\nReactDOM.render(makeRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}